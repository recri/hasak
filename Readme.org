* Ham and Swiss Army Knife (hasak) keyer
**  This is a morse code keyer built for the Hermes Lite 
   low latency keyer project.  The goal is to allow
   the operator to hear keyed code with low latency
   while listening to and keying a possibly remote
   transceiver.
** It currently runs on a Teensy 4.0 with Teensy Audio 
   Adapter board, but it has also run on a Teensy 3.1
   with Teensy Audio Adapter.  I suspect it will work
   with limits on a plain Teensy 3 or 4.
** Hardware set up is straight forward.
   Most of this can be found in ./config.h.
   Pin 0 is the right paddle key in.
   Pin 1 is the left paddle key in.
   Pin 2 is the straight key in.
   Pin 3 is be a PTT switch.
   Pin 4 is Key out.
   Pin 5 is PTT out.
   On the Teensy 4 only, pin 20 should be jumpered to pin 22,
     it is the I2S LRCLK signal that is used to generate a 
     sample rate interrupt.
   For a typical phone headset with microphone and button(s),
     you will need wires from audio adapter headphone L, R,
     MIC and GND, two ~220uF electrolyics to couple L and R
     to the headphones and a properly wired TRRS jack.
   Line in and line out.
   There is ouput passed to the hardware DAC.
	 On a Teensy 3.1/3.2, this is the pin labelled DAC/A14.
	 On a Teensy 3.5/3.6, the pins are labelled   A21/A22.
	 On a Teensy 4.0, the pins are labelled 10/12.
* To build the keyer
** You need the Arduino IDE with the Teensyduino extensions.  
   Consult pjrc.com for details.
** Build the keyer with the proper board entry.
** Specify the  proper board in the Tools > Board > Teensyduino menu
** Specify USB Type to be Serial+MIDI+Audio
** Compile and download.
* The keyer should start operating immediately.
  It will use the default settings that were compiled.
  It should produce sidetone for straight key and iambic
  mode A at 18 WPM for the paddle.
* Parameters can be changed with MIDI.   
** The file ctrlr/hasak.panel is a panel definition for Ctrlr,
   a MIDI control panel program.  
** You can download Ctrlr from https://ctrlr.org/nightly/?C=M;O=D,
   I only use the 5.3.201 release, later versions have issues.
*** If you run Ctrlr on linux, be sure to vist Edit> Preferences
    and uncheck "Use OS native file open/save dialogs ..."
** Run Ctrlr with the panel definition as its only argument.
** The panel lays out the parameters that can be changed
   while the keyer is running.
** Several issues have yet to be resolved,
   the current but somewhat outdated list can be found in doc/ToDo.org
* Don't forget
** Teensy 4 pin 20 jumpered to pin 22.
** Don't connect the audio adapter headphone jack shield pad
   to anything, it's a virtual ground biased at ~1.55V.
** Have fun.
-- 73 -- rec -- ad5dz --
